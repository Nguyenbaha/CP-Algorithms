// Nguyễn Bá Hà

#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define mp(x,y) make_pair(x,y)
#define fore(i,a,b) for (int i=a,ThxDem=b;i<ThxDem;i++)
#define ford(i,a,b) for (int i=a-1,ThxDem=b;i>=ThxDem;i--)
#define pb push_back
#define all(s) s.begin(),s.end()
#define rall(s) s.rbegin(),s.rend()
 #define prec(n) fixed<<setprecision(n)
typedef unsigned long long ull;
typedef long long ll;
const ll MAXN= 200005;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pll> vll;
typedef vector<pii> vii;
typedef vector<string> vs;
const ll mod= 1e9+7;
#define out(x) cout << x 
#define yes cout<<"YES"<<endl
#define no  cout<<"NO"<<endl
#define minpq(s) priority_queue<int, vector<int>, greater<int>> = s;
#define bit(p,x) ((x>>p) & 1)
// __gcd(n,0) = n;
#define see(x) cout << #x << " = " << x << ' '
#define seen(x) cout << #x << " = " << x << '\n'

                //(////(/((//#//%%%&&&&&&&&&%%%%%%##############((/,,,,*((((((((((((#######(#%####
                //////////(//(//%#######&%#%%%%%%%%&%%##########(,,,,,(((((((((((#########%%######
                ///////////////#%%######%#########%%&%#########(,,,,*/(#/(((##(#########%#########
                //#######%%%%###########%############%%%%%%%%%/,,/((###((#####((/(#/##%###########
                //%%%%###%%%%%%%%#########################%#(#########################%%%%%%%%%%##
                //((######&&%%%%%%%#####((#((####(#(##%%%%%%%###########%%###(%%%%%%#############%
                //########&%&&&%%%%%%%%%%&&&&&&&&&&&&&%%#%%%%%#%%%%%%%%%%#########%%%%%%#%(##(((((
                //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##%%%%#(((///**////((#%%%%%%#(#####
                //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%#(#%&%#(//////*/**/////((##(%%#######
                //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%&%#(#%%%(////****////*////(((##(%####(((
                //###############&(#################(%%%%&&#%(%%#((//**/*//*//////*///((#(%%##((((
                //###############%###############(((%%%%%&%((%%##/////////////////////(((#(%####((
                //#%%%%&&&%&%%%%%#%%%##%%#%######(*%%%%%%#((#%&%%####%##((//////(((######%(%###(//
                //&%&%%&&&&%%%%%%(%%&&&%%%%%%%%#/,/%%&&%%//#%%(((((((((((((////((((((((((##%#/,*,/
                //*/**,****((####((###(((*********#%#%%#(//(#%#%%(#%%(#((((///(((#(%%%(%#(*##((/((
                ///*//*****%%(#(#(#((#(((*******,(#&&###(/(((#(((((((((((///*/((((((((((((/%%#%###
                //**///**%%&%####(#((((%%%**(,,##(//#&((((((#(//////////*///**//((((//(((((%%%#%%%
                //*////*///*,,*#(&&&&&%%%/#*,,***/*////((/(((#/////////(///****/(///////((%%%%%%%%
                //*,,*****/(/****,*,,,*,***,,*******///**/((#((//////((//////////////////(#%#%%%%%
                //***,*,,*,*///***,*,/****,,,*,,**/**//*/#(//((/////(///(((((((((///////((###((/(#
                //,,,,,,**,,*////***//((**,,,**,****/*/(/((#((#(((((%((((#((/((//((((///((((###(//
                //,,,****,*,,*****/*(//*******,*****,//////(//#(((((///#####%#%#(%(///(#((((((((((
                //***********//////(/*/(**********/*///%%%/////(((/(////(((((((#(///((////(((((/,,
                //***/*//////**/*/*/%///****/////****/%%%%**//((////(//////((#///////(//#((###(//*
                //,*,*******///(//####///*(///////***(((#((/////((////(#((#////*/***/**/**********
                //,*,,******/*/((((((/*,**/*******/*****((//////////////#/****//(/*****(/(####(#(/
                //,,,,*********,*////(*,***********/***////////////////******/%#((//***/*(####((#(
                //***,********/**///((*,*************(//*////////////******************/*//*******
                //*/*,********(***,**/****///*///(#%%%#*/**/////////*//**************/*/*/****,***
                //*,,,*,,,****,,*****/*/*,********%%%%%#//////////////////********/((//***,*******
                //,,,,**,*********/***,*,**********%####%#*//***//////////////*****#(#///******,**
                //(*,,****//((#**************,******#####(#**/***/*///////////////**(/(/**********


            const ll MULTI_TESTS = 1;
    // here
    
    vector<int> x(MAXN);
    vector<int> sz(MAXN);
   

    int find(int u){
        if (x[u]==u) return u;
        return x[u] = find(x[u]);
    }
    int len(int A){
        return -x[find(A)];
    }
    void join(int a,int b){
        int ra = find(a);
        int rb = find(b);
        if (sz[ra]<sz[rb]) swap(ra,rb);
        x[rb] = ra;
        if(ra!=rb) sz[ra]+=sz[rb];
    }
  

            void unstoppable()
        {
    

            int n, k;
            string s;
            cin >> n >> k >> s;
           
            vector<vector<int>> cnt;
            cnt.assign(n+6,vector<int>(26));
            fore(i,0,n)
            {
                x[i] = i;
                fore(j,0,26)
                cnt[i][j] = 0;
            }
            fore(i,0,n)
                join(i,n-i-1);
            fore(i,0,n-k)
                join(i,i+k);
            
            fore(i,0,n)
                cnt[find(i)][s[i]-'a']++;
            int ans = 0;
            fore(i,0,n)
            {
                if( find(i) == i )
                    ans+=(accumulate(cnt[i].begin(),cnt[i].end(),0) - *max_element(cnt[i].begin(),cnt[i].end()));
            }
            cout <<ans<<endl;

        }







    // main

        signed main()
{
             std::ios::sync_with_stdio(false);
         cin.tie(0);cout.tie(0);
   if (MULTI_TESTS)
   {
        ll Q;
        cin >> Q;
        while (Q--) 
    {
            unstoppable();
        }
    } 
    else 
       {
        unstoppable();
       }
    return 0;
}



